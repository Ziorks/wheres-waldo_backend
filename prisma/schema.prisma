// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Image {
  id         Int         @id @default(autoincrement())
  src        String
  width      Int
  height     Int
  characters Character[]
  games      Game[]
}

model Character {
  id         Int         @id @default(autoincrement())
  name       String
  avatar     String
  objectives Objective[]
  location   Location?
  image      Image       @relation(fields: [imageId], references: [id], onDelete: Cascade)
  imageId    Int
}

model Location {
  character   Character @relation(fields: [characterId], references: [id], onDelete: Cascade)
  characterId Int       @unique
  x           Int
  y           Int
}

model Game {
  id         Int         @id @default(autoincrement())
  startTime  DateTime?
  endTime    DateTime?
  nGuesses   Int         @default(0)
  playerName String?
  image      Image       @relation(fields: [imageId], references: [id], onDelete: Restrict)
  imageId    Int
  objectives Objective[]
}

model Objective {
  found       Boolean   @default(false)
  character   Character @relation(fields: [characterId], references: [id], onDelete: Restrict)
  characterId Int
  game        Game      @relation(fields: [gameId], references: [id], onDelete: Cascade)
  gameId      Int

  @@id([characterId, gameId])
}
